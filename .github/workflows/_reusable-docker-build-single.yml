---
# Re-usable workflow for a single-architecture build
name: Reusable - Single-arch Container build

on:
  workflow_call:
    inputs:
      target_name:
        required: true
        type: string
      registry_ghcr:
        default: true
        type: boolean
      image_suffix:
        default: ""
        type: string
      variables:
        default: ""
        type: string
      image_arch:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      extra_args:
        type: string
        description: Extra args to `docker buildx` command
        default: "--push"
    outputs:
      image-digest:
        value: ${{ jobs.build.outputs.image-digest }}

jobs:
  build:
    name: Build ${{ inputs.image_arch }}
    runs-on: ${{ inputs.runs-on }}
    outputs:
      image-digest: ${{ steps.digest.outputs.digest }}
    permissions:
      # Needed to upload container images to ghcr.io
      packages: write
      # Needed for attestation
      id-token: write
      attestations: write
      # Needed for checkout
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3.6.0
      - uses: docker/setup-buildx-action@v3
      - if: ${{ inputs.registry_ghcr }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: crazy-max/ghaction-github-runtime@v3
      - id: build
        run: |
          set -xe
          docker buildx create \
            --use \
            --platform=${{ inputs.image_arch }} \
            --name multi-platform-builder \
            --driver-opt env.BUILDKIT_STEP_LOG_MAX_SIZE=50000000
          docker buildx inspect --bootstrap
          docker buildx install
          cache_scope="${{ inputs.target_name }}-${{ inputs.image_arch }}-${{ inputs.variables }}"
          make \
            DOCKER_BUILDX_FLAGS="
              --platform ${{ inputs.image_arch }} \
              ${{ inputs.extra_args }} \
              --load \
              --cache-from type=gha,ghtoken=${{ secrets.GITHUB_TOKEN }},scope=${cache_scope} \
              --cache-to type=gha,mode=max,ghtoken=${{ secrets.GITHUB_TOKEN }}",scope=${cache_scope} \
            IMAGE_SUFFIX="${{ inputs.image_suffix }}" \
            ARCH="${{ inputs.image_arch }}" \
            ${{ inputs.variables }} ${{ inputs.target_name }}
      - id: digest
        env:
          image: ${{ steps.build.outputs.full }}
        run: |
          docker pull $image
          docker inspect $image
          echo "digest=$(docker inspect $image -f '{{ index .RepoDigests 0 }}')" >> ${GITHUB_OUTPUT}
